/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication2;

import java.awt.event.KeyEvent;

import javax.swing.JOptionPane;
import java.util.Date;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFormattedTextField;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public final class VendaView extends javax.swing.JFrame {

    String modoDep = "";
    int IDcep = 0;
    int IDcid;
    String sex = "";
    String pessoa = "";
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();
    int ItemVenda = 1;
    ArrayList<ItemVenda> lista = new ArrayList<ItemVenda>();
    double VTV = 0;
    int IDcli = 0;
    int IDvenda = 0;
    int qtde = 0;
    String IDItemVenda = "";
    private int IDvendaF;
    private int IDvendaTable;

    /**
     * Creates new form VendaView
     */
    public VendaView() {

        initComponents();
        setFocusLostBehavior();
        setcampos();
        modoDep = "inicial";
        ManipulaInterfaceDep();
        dtm.addColumn("Item de venda");
        dtm.addColumn("Codigo do produto");
        dtm.addColumn("Descrição");
        dtm.addColumn("Marca");
        dtm.addColumn("Unidade");
        dtm.addColumn("Quantidade");
        dtm.addColumn("Preço");
        dtm.addColumn("Valor");
        dtm.addColumn("Desconto");
        dtm.addColumn("Valor Total");
        jTabela.setModel(dtm);

        dtm2.addColumn("Nome do Cliente");
        dtm2.addColumn("CPF");
        dtm2.addColumn("CNPJ");
        dtm2.addColumn("Número da Venda");
        dtm2.addColumn("Valor da Venda");
        dtm2.addColumn("Data da venda");
        JTabela1.setModel(dtm2);
        jButton9.setEnabled(false);
        jButton4.setEnabled(false);
        jButton2.setEnabled(false);
        jPreco.setEditable(false);
        jValorT.setEditable(false);
        jValor.setEditable(false);

        if (!BD.getConnection()) {
            JOptionPane.showMessageDialog(null, "Falha na conexão, o sistema será fechado");
            System.exit(0);

        }
        modoDep = "Novo";
        ManipulaInterfaceDep();

        BD.setResultSet("SELECT * FROM cliente");

        setLocationRelativeTo(null);

        //RelativeNull é para a tela ficar centralizada
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFrame1 = new javax.swing.JFrame();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTabela1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDataVenda = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jBCPF = new javax.swing.JRadioButton();
        jBCNPJ = new javax.swing.JRadioButton();
        jCPF = new javax.swing.JFormattedTextField();
        jCNPJ = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jNumero = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jFone = new javax.swing.JFormattedTextField();
        jCelular = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jRua = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jNome = new javax.swing.JTextField();
        jBairro = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jEstado = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jCEP = new javax.swing.JFormattedTextField();
        jEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jIDV = new javax.swing.JTextField();
        jVvenda = new javax.swing.JTextField();
        jBuscar = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jCidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jNomeP = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jidP = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jQuantidade = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jPreco = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jMarca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jDesconto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jValor = new javax.swing.JTextField();
        jVT = new javax.swing.JLabel();
        jValorT = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jUnidade = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel25.setText("COMPRAS DO CLIENTE");

        JTabela1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        JTabela1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JTabela1FocusGained(evt);
            }
        });
        JTabela1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTabela1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JTabela1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE))
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(80, 80, 80));
        setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(50, 50, 50));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(50, 50, 50));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSeparator1.setForeground(new java.awt.Color(90, 90, 90));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Formulário De Vendas");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Codigo da Venda");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Data da Venda");

        try {
            jDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jDataVenda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jDataVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDataVendaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Valor da Venda");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nome do cliente");

        buttonGroup1.add(jBCPF);
        jBCPF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBCPF.setText("CPF");
        jBCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCPFActionPerformed(evt);
            }
        });

        buttonGroup1.add(jBCNPJ);
        jBCNPJ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBCNPJ.setText("CNPJ");
        jBCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCNPJActionPerformed(evt);
            }
        });

        jCPF.setBorder(null);
        try {
            jCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCPF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jCNPJ.setBorder(null);
        try {
            jCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCNPJ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Email");

        jNumero.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Telefone");

        try {
            jFone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        try {
            jCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCelularActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Celular");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Rua");

        jRua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Bairro");

        jNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Cep");

        try {
            jEstado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UU")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jEstado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Estado");

        try {
            jCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCEP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Numero R");

        jIDV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jVvenda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jVvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVvendaActionPerformed(evt);
            }
        });

        jBuscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBuscar.setText("Buscar Cliente");
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Cidade");

        jCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Descrição do Produto");

        jNomeP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Quantidade");

        jidP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Preço");

        jQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQuantidadeActionPerformed(evt);
            }
        });
        jQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jQuantidadeKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Codigo do produto");

        jPreco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Marca");

        jMarca.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Buscar Produto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("Desconto");

        jDesconto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDescontoKeyPressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Finalizar Venda");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Calcular Venda");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("Cancelar Venda");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTabela.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTabela);

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton5.setText("Adicionar Produto");
        jButton5.setToolTipText("");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setText("Valor");

        jValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jVT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jVT.setText("Valor Total");

        jValorT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel24.setText("Unidade");

        jUnidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton6.setText("Remover Produtos");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton7.setText("Consulatar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton9.setText("Fazer nova Venda");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(28, 28, 28)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jBCPF)
                                                        .addComponent(jLabel7))
                                                    .addGap(26, 26, 26)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jBCNPJ)
                                                .addComponent(jCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                                .addComponent(jFone))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel12))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                                    .addComponent(jCEP)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel8))
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel16)
                                                    .addComponent(jLabel15))
                                                .addGap(13, 13, 13)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(32, 32, 32)
                                                        .addComponent(jBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jRua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jNumero, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel4))
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jDataVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                            .addComponent(jIDV)
                                            .addComponent(jVvenda))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton7)
                                        .addGap(10, 10, 10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBuscar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel23))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jidP, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jNomeP)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jValor)
                                            .addComponent(jQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jVT)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jValorT, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel24)
                                                .addGap(18, 18, 18)
                                                .addComponent(jUnidade)))
                                        .addGap(94, 94, 94)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 1348, Short.MAX_VALUE)
                                .addComponent(jSeparator1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(398, 398, 398))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jIDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBCNPJ)
                                .addComponent(jRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jBCPF)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBuscar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jVvenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(jidP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jNomeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24)
                                    .addComponent(jUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel22)
                                        .addComponent(jDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23)
                                    .addComponent(jVT)
                                    .addComponent(jValorT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton9)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jButton6)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap(183, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDataVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDataVendaActionPerformed


    }//GEN-LAST:event_jDataVendaActionPerformed

    private void jBCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCNPJActionPerformed
        pessoa = "J";
        modoDep = "pessoaJ";
        ManipulaInterfaceDep();
    }//GEN-LAST:event_jBCNPJActionPerformed

    private void jVvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVvendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jVvendaActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed
        if (pessoa.equals("F")) {
            consultaCPF();
        } else {
            if (pessoa.equals("J")) {
                consultaCNPJ();
            } else {
                JOptionPane.showMessageDialog(null, "Tipo de Pessoa Invalido");
            }
        }

    }//GEN-LAST:event_jBuscarActionPerformed

    private void jBCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCPFActionPerformed
        pessoa = "F";
        modoDep = "pessoaF";
        ManipulaInterfaceDep();
    }//GEN-LAST:event_jBCPFActionPerformed

    private void jCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCelularActionPerformed
    }//GEN-LAST:event_jCelularActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jQuantidade.setText("");
        jValor.setText("");
        jDesconto.setText("");
        jValorT.setText("");

        String sql = "";

        sql = "SELECT * FROM produto WHERE codigo = '" + jidP.getText() + "'";
        BD.setResultSet(sql);
        // System.out.println(sql);

        try {

            if (BD.resultSet.next()) {

                String valorU = String.valueOf(BD.resultSet.getInt("valorvenda"));

                jNomeP.setText(BD.resultSet.getString("descr"));

                jPreco.setText(valorU);
                jMarca.setText(BD.resultSet.getString("marca"));
                jUnidade.setText(BD.resultSet.getString("unidade"));
                IDItemVenda = BD.resultSet.getString("codigo");
                System.out.println(IDItemVenda);

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Produto não encontrado!");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (pessoa.equals("F")) {
            cancelaPedidoCPF();
        } else {
            if (pessoa.equals("J")) {
                cancelaPedidoCNPJ();
            } else {
                JOptionPane.showMessageDialog(null, "Tipo de cliente Inválido");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy ");
        LocalDateTime now = LocalDateTime.now();
        String data = dtf.format(now);
        jDataVenda.setText(dtf.format(now).replace("/", ""));
        jVvenda.setText(String.valueOf(VTV));

        DateTimeFormatter dt = DateTimeFormatter.ofPattern("yyyy/MM/dd ");
        LocalDateTime nowt = LocalDateTime.now();
        String dataini = dtf.format(now);
        jButton4.setEnabled(true);
        jButton2.setEnabled(true);


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDescontoKeyPressed
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)) {
            if (jQuantidade.getText().equals("") || jPreco.getText().equals("") || jDesconto.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Valor ou Quantidade digitado é nula!");
            } else {
                double valor = Double.parseDouble(jPreco.getText()) * Double.parseDouble(jQuantidade.getText());
                double desc = valor - (valor * Double.parseDouble(jDesconto.getText()) / 100);

                jValorT.setText(String.valueOf(desc));

            }
        }
    }//GEN-LAST:event_jDescontoKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dtm.addRow(new String[]{String.valueOf(ItemVenda), jidP.getText(), jNomeP.getText(), jMarca.getText(), jUnidade.getText(), jQuantidade.getText(), jPreco.getText(), jValor.getText(), jDesconto.getText(), jValorT.getText()});
        ItemVenda++;
        ItemVenda iv = new ItemVenda(ItemVenda, jidP.getText(), Integer.parseInt(jQuantidade.getText()), Double.parseDouble(jDesconto.getText()), IDItemVenda, Double.parseDouble(jValorT.getText()));
        lista.add(iv);

        VTV = VTV + Double.parseDouble(jValorT.getText());
        jVvenda.setText(String.valueOf(VTV));


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jQuantidadeKeyPressed
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)) {
            if (jQuantidade.getText().equals("") || jPreco.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Valor ou Quantidade digitado nula!");
            } else {
                double valor = Double.parseDouble(jPreco.getText()) * Double.parseDouble(jQuantidade.getText());
                jValor.setText(String.valueOf(valor));

            }
        }


    }//GEN-LAST:event_jQuantidadeKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String sql = "";
        int codP = 0;

        try {
            sql = "INSERT INTO venda(valorvenda,IDcliente,IDfuncionario,selltime) VALUES ("
                    + VTV + ","
                    + IDcli + ","
                    + UsuarioConectado.getIDfunc() + ","
                    + " CURRENT_TIMESTAMP())";
            System.out.println(sql);
            int insertvenda = BD.runSQL(sql);
            if (insertvenda == 1) {
                JOptionPane.showMessageDialog(null, "Inclusão realizada com sucesso!");

                //ManipulaInterfaceDep();
                BD.setResultSet("SELECT * FROM produto");
            } else {
                JOptionPane.showMessageDialog(null, "Problemas na Inclusão, verifique se "
                        + "você digitou os campos corretamente!");
            }
        } catch (Exception e) {
        }

        try {

            sql = "SELECT IDvenda FROM venda ORDER by IDvenda DESC limit 1 ";
            BD.setResultSet(sql);

            if (BD.resultSet.next()) {
                // System.out.println("teste");

                IDvenda = BD.resultSet.getInt("IDvenda");
                //System.out.println(IDvenda);
            } else {
                JOptionPane.showMessageDialog(null, "Venda não encontrado!");

            }
        } catch (Exception erro) {

        }

        for (Iterator iterator = lista.iterator(); iterator.hasNext();) {
            ItemVenda c = (ItemVenda) iterator.next();
            //System.out.println(c.getCodproduto());
            try {
                sql = "SELECT IDproduto,quantest FROM produto WHERE codigo = '" + c.getCodproduto() + "'";
                BD.setResultSet(sql);

                if (BD.resultSet.next()) {
                    codP = BD.resultSet.getInt("IDproduto");
                    qtde = BD.resultSet.getInt("quantest");
                    System.out.println(codP);
                    double desconto = Double.parseDouble(jDesconto.getText());
                    int qtd = Integer.parseInt(jQuantidade.getText());
                    qtde = qtde - qtd;

                    sql = " INSERT INTO itemvenda (IDvenda,desconto,quantidade,precounitario,IDproduto ) Values ("
                            + IDvenda + ","
                            + desconto + ","
                            + qtd + ","
                            + +c.getPrecounit() + ","
                            + codP + ")";
                    System.out.println(codP);
                    System.out.println(sql);
                    int insertIvend = BD.runSQL(sql);
                    if (insertIvend == 1) {
                        JOptionPane.showMessageDialog(null, "Inclusão realizada com sucesso!");

                        // ManipulaInterfaceDep();
                        BD.setResultSet("SELECT * FROM produto");
                    } else {
                        JOptionPane.showMessageDialog(null, "Problemas na Inclusão, verifique se "
                                + "você digitou os campos corretamente!");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Produto não Encontrado");

                }

                sql = "UPDATE produto SET "
                        + "quantest=" + qtde
                        + " WHERE IDproduto = " + codP;
                System.out.println(sql);

                int rr = BD.runSQL(sql);
                if (rr == 1) {
                    JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Problemas na Alteração, verifique se" + " você digitou os campos corretamente!");
                }
                BD.setResultSet("SELECT * FROM produto");

            } catch (SQLException ex) {
                Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        lista.clear();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jQuantidadeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int i = jTabela.getSelectedRow();

        if (jTabela.isRowSelected(i)) {

            dtm.removeRow(i);

        } else {

            // int row = jTabela.getRowCount();
            // System.out.println(row);
            // dtm.removeRow(row - 1);
            int rowCount = dtm.getRowCount();
//Remove rows one by one from the end of the table
            for (int a = rowCount; a >= 0; a--) {
                dtm.removeRow(a - 1);

            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jBuscar.setEnabled(false);
        jButton9.setEnabled(true);

        int rowCount = dtm2.getRowCount();
        System.out.println("rows" + rowCount);

        if (rowCount != 0) {
            for (int a = rowCount; a > 0; a--) {
                dtm2.removeRow(a - 1);

            }
        }

        String sql = "";
        System.out.println("teste");
        String CNPJ = jCNPJ.getText().replaceAll("[/,.,-]", "").trim();
        System.out.println(CNPJ);
        String CPF = jCPF.getText().replaceAll("[-,.]", "").trim();

        if (CPF.length() == 11) {
            System.out.println(CPF + " cpf");
            System.out.println(CPF.length());
            sql = "SELECT * FROM venda Join cliente on venda.IDcliente = cliente.IDcliente Join cidade on cliente.IDcidade = cidade.IDcidade WHERE cliente.CPF = '" + CPF + "'";
            BD.setResultSet(sql);
            System.out.println(sql);

        } else {
            if (CNPJ.length() == 14) {
                sql = "SELECT * FROM venda Join cliente on venda.IDcliente = cliente.IDcliente Join cidade on cliente.IDcidade = cidade.IDcidade WHERE cliente.CNPJ = " + CNPJ;
                BD.setResultSet(sql);
                System.out.println(sql);

            } else {
                JOptionPane.showMessageDialog(null, "Porfavor Selecione o tipo de identificador de pessoa, CPF ou CNPJ");
            }

        }

        try {
            while (BD.resultSet.next()) {

                //while (BD.resultSet.next()) {
                //new VendaView().jFrame1.setVisible(true);
                String d = BD.resultSet.getString("venda.selltime");
                System.out.println(d);
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date data = df.parse(d);
                SimpleDateFormat da = new SimpleDateFormat("dd-MM-yyyy");
                String datafinal = da.format(data).replace("-", "");
                int c = datafinal.length() + 2;

                dtm2.addRow(new String[]{BD.resultSet.getString("cliente.nome"), BD.resultSet.getString("cliente.CPF"), BD.resultSet.getString("cliente.CNPJ"), String.valueOf(BD.resultSet.getInt("venda.IDvenda")), String.valueOf(BD.resultSet.getDouble("venda.valorvenda")), String.valueOf(datafinal)});
                IDvendaF = BD.resultSet.getInt("venda.IDvenda");
                this.jFrame1.setVisible(true);

                // }
            }
        } catch (SQLException ex) {
            Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
        }/* catch (ParseException ex) {
            Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }//GEN-LAST:event_jButton7ActionPerformed

    private void JTabela1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTabela1MouseClicked

        int rowIndex = JTabela1.getSelectedRow();

        IDvendaTable = Integer.parseInt(JTabela1.getValueAt(rowIndex, 3).toString());

        PesquisaVenda();
        this.jFrame1.setVisible(false);
    }//GEN-LAST:event_JTabela1MouseClicked

    private void JTabela1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTabela1FocusGained


    }//GEN-LAST:event_JTabela1FocusGained

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jButton9.setEnabled(false);
        jButton4.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(true);
        jBuscar.setEnabled(true);

        LimpaTela();
    }//GEN-LAST:event_jButton9ActionPerformed

    public void setcampos() {
        jNome.setEditable(false);
        jBairro.setEditable(false);
        jCelular.setEditable(false);
        jRua.setEditable(false);
        jDataVenda.setEditable(false);
        jCidade.setEditable(false);
        jFone.setEditable(false);
        jVvenda.setEditable(false);
        jIDV.setEditable(false);
        jCEP.setEditable(false);
        jEmail.setEditable(false);
        jEstado.setEditable(false);
        jMarca.setEditable(false);
        jidP.setEditable(true);
        jPreco.setEditable(true);
        jNomeP.setEditable(false);
        jValorT.setEditable(false);
        jUnidade.setEditable(false);

    }

    public void setFocusLostBehavior() {
        int PERSIST = JFormattedTextField.PERSIST;
        jCPF.setFocusLostBehavior(PERSIST);
        jDataVenda.setFocusLostBehavior(PERSIST);
        jCNPJ.setFocusLostBehavior(PERSIST);
        jCelular.setFocusLostBehavior(PERSIST);
        jFone.setFocusLostBehavior(PERSIST);
        jEstado.setFocusLostBehavior(PERSIST);
    }

    public void cancelaPedidoCNPJ() {
        String sql = "SELECT * FROM cliente WHERE CNPJ='"
                + jCNPJ.getText().replace(".", "").replace("-", "").replace("/", "") + "'";
        BD.setResultSet(sql);
        String nom = "";
        try {
            BD.resultSet.next();
            nom = "Deseja cancelar o Pedido do Cliente:" + BD.resultSet.getString("nome");
        } catch (SQLException ex1) {
            JOptionPane.showMessageDialog(null, "Cliente não cadastrado!");
            jCPF.requestFocus();
            BD.setResultSet("SELECT * FROM cliente");
            return;
        }
        int n = JOptionPane.showConfirmDialog(null, nom, "Cancelamento de Pedido", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            limpatela();
        }
        BD.setResultSet("SELECT * FROM cliente");

    }

    public void cancelaPedidoCPF() {
        String sql = "SELECT * FROM cliente WHERE CPF='"
                + jCPF.getText().replace(".", "").replace("-", "") + "'";
        BD.setResultSet(sql);
        String nom = "";
        try {
            BD.resultSet.next();
            nom = "Deseja cancelar o Pedido do Cliente:" + BD.resultSet.getString("nome");
        } catch (SQLException ex1) {
            JOptionPane.showMessageDialog(null, "Cliente não cadastrado!");
            jCPF.requestFocus();
            BD.setResultSet("SELECT * FROM cliente");
            return;
        }
        int n = JOptionPane.showConfirmDialog(null, nom, "Cancelamento de Pedido", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            limpatela();

        }
        BD.setResultSet("SELECT * FROM cliente");

    }

    public void consultaCPF() {

        try {
            String sql = "SELECT * FROM cliente WHERE CPF='"
                    + jCPF.getText().replace(".", "").replace("-", "") + "'";
            BD.setResultSet(sql);
            System.out.println(sql);
            if (BD.resultSet.next()) {

                atualizaCamposCPF();

            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
                jCPF.requestFocus();
                modoDep = "Editar";
                //ManipulaInterfaceDep();
                BD.setResultSet("SELECT * FROM cliente");
            }
        } catch (Exception erro) {

        }
    }

    public void limpatela() {

        jNome.setText("");
        jCPF.setText("");
        jCNPJ.setText("");
        jEmail.setText("");
        jFone.setText("");
        jCelular.setText("");
        jCEP.setText("");
        jNomeP.setText("");
        jidP.setText("");
        jQuantidade.setText("");
        jPreco.setText("");
        jMarca.setText("");
        jDesconto.setText("");
    }

    public void atualizaCamposCPF() throws ParseException {
        try {
            if (BD.resultSet.isAfterLast()) {
                BD.resultSet.last();
            }
            if (BD.resultSet.isBeforeFirst()) {
                BD.resultSet.first();
            }
            jNome.setText(BD.resultSet.getString("nome"));
            jEmail.setText(BD.resultSet.getString("Email"));
            IDcli = BD.resultSet.getInt("IDcliente");
            System.out.println(IDcli);
            String d = BD.resultSet.getString("datanascimento");
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date data = df.parse(d);
            SimpleDateFormat da = new SimpleDateFormat("dd-MM-yyyy");
            String datafinal = da.format(data).replace("-", "");
            //System.out.println(datafinal);
            //jDataNascimento.setText(datafinal);
            jFone.setText(BD.resultSet.getString("telefone"));
            jCelular.setText(BD.resultSet.getString("celular"));
            jNumero.setText(BD.resultSet.getString("numero"));
            sex = BD.resultSet.getString("sexo");
            //System.out.println(sex);
            if (sex.equals("M")) {
                // System.out.println(sex);
                sex = "M";
            } else {
                if (sex.equals("F")) {
                    // System.out.println(sex);
                    sex = "F";

                }
            }
            BD.closeResultSet();

            String sql = "SELECT IDcidade FROM cliente WHERE CPF='"
                    + jCPF.getText().replace(".", "").replace("-", "") + "'";
            BD.setResultSet(sql);
            System.out.println(sql);
            if (BD.resultSet.next()) {
                //System.out.println("teste");
                //BD.resultSet.next();

                IDcid = BD.resultSet.getInt("IDcidade");
                // System.out.println(IDcid);

            } else {
                JOptionPane.showMessageDialog(null, "CPF não encontrado!");
                jCEP.requestFocus();
                BD.setResultSet("SELECT * FROM cidade");
            }

            try {

                sql = "SELECT * FROM cidade WHERE IDcidade ='"
                        + IDcid + "'";
                BD.setResultSet(sql);
                if (BD.resultSet.next()) {

                    jBairro.setText(BD.resultSet.getString("bairro"));
                    jEstado.setText(BD.resultSet.getString("Estado"));
                    jCidade.setText(BD.resultSet.getString("cidade"));
                    jCEP.setText(BD.resultSet.getString("CEP"));
                    IDcep = BD.resultSet.getInt("IDcidade");
                    jRua.setText(BD.resultSet.getString("Rua"));
                    // System.out.println(IDcep);
                } else {
                    JOptionPane.showMessageDialog(null, "CEP não encontrado!");
                    jCEP.requestFocus();
                    BD.setResultSet("SELECT * FROM cidade");
                }
            } catch (Exception erro) {

            }

        } catch (SQLException erro) {

        }
    }

    public void consultaCNPJ() {
        try {
            String sql = "SELECT * FROM cliente WHERE CNPJ='"
                    + jCNPJ.getText().replace(".", "").replace("-", "") + "'";
            BD.setResultSet(sql);
            System.out.println(sql);
            if (BD.resultSet.next()) {
                atualizaCamposCNPJ();
                jNome.requestFocus();

            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
                jCNPJ.requestFocus();
                modoDep = "Editar";
                ManipulaInterfaceDep();
                BD.setResultSet("SELECT * FROM cliente");
            }
        } catch (Exception erro) {

        }
    }

    public void atualizaCamposCNPJ() throws ParseException {
        try {
            if (BD.resultSet.isAfterLast()) {
                BD.resultSet.last();
            }
            if (BD.resultSet.isBeforeFirst()) {
                BD.resultSet.first();
            }
            jNome.setText(BD.resultSet.getString("nome"));
            jEmail.setText(BD.resultSet.getString("Email"));

            String d = BD.resultSet.getString("datanascimento");
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date data = df.parse(d);
            SimpleDateFormat da = new SimpleDateFormat("dd-MM-yyyy");
            String datafinal = da.format(data).replace("-", "");
            System.out.println(datafinal);
            //  jDataNascimento.setText(datafinal);
            jFone.setText(BD.resultSet.getString("telefone"));
            jCelular.setText(BD.resultSet.getString("celular"));
            jNumero.setText(BD.resultSet.getString("numero"));
            sex = BD.resultSet.getString("sexo");
            //System.out.println(sex);
            if (sex.equals("M")) {
                System.out.println(sex);
                sex = "M";
            } else {
                if (sex.equals("F")) {
                    //System.out.println(sex);
                    sex = "F";

                }
            }
            BD.closeResultSet();

            String sql = "SELECT IDcidade FROM cliente WHERE CNPJ='"
                    + jCNPJ.getText().replace(".", "").replace("-", "") + "'";
            BD.setResultSet(sql);
            System.out.println(sql);
            if (BD.resultSet.next()) {
                System.out.println("teste");
                //BD.resultSet.next();

                IDcid = BD.resultSet.getInt("IDcidade");
                //System.out.println(IDcid);

            } else {
                JOptionPane.showMessageDialog(null, "CNPJ não encontrado!");
                jCEP.requestFocus();
                BD.setResultSet("SELECT * FROM cidade");
            }

            try {

                sql = "SELECT * FROM cidade WHERE IDcidade ='"
                        + IDcid + "'";
                BD.setResultSet(sql);
                if (BD.resultSet.next()) {

                    jBairro.setText(BD.resultSet.getString("bairro"));
                    jEstado.setText(BD.resultSet.getString("Estado"));
                    jCidade.setText(BD.resultSet.getString("cidade"));
                    jCEP.setText(BD.resultSet.getString("CEP"));
                    IDcep = BD.resultSet.getInt("IDcidade");
                    jRua.setText(BD.resultSet.getString("Rua"));
                    System.out.println(IDcep);
                } else {
                    JOptionPane.showMessageDialog(null, "CEP não encontrado!");
                    jCEP.requestFocus();
                    BD.setResultSet("SELECT * FROM cidade");
                }
            } catch (Exception erro) {

            }

        } catch (SQLException erro) {

        }
    }

    public void PesquisaVenda() {

        String sql = "";

        int rowCount = dtm.getRowCount();
        //System.out.println("rows" + rowCount);

        if (rowCount != 0) {
            for (int i = rowCount; i >= 0; i--) {
                dtm.removeRow(i - 1);
            }
        }

        try {

            sql = "SELECT * FROM venda Join itemvenda on itemvenda.IDvenda = venda.IDvenda Join cliente on venda.IDcliente = cliente.IDcliente Join cidade on cliente.IDcidade = cidade.IDcidade WHERE venda.IDvenda = " + IDvendaTable;
            BD.setResultSet(sql);
            System.out.println(sql);

            if (BD.resultSet.next()) {
                jNome.setText(BD.resultSet.getString("Cliente.nome"));
                jCPF.setText(BD.resultSet.getString("Cliente.CPF"));
                jCNPJ.setText(BD.resultSet.getString("Cliente.CNPJ"));
                jEmail.setText(BD.resultSet.getString("Cliente.Email"));
                jFone.setText(BD.resultSet.getString("Cliente.telefone"));
                jCelular.setText(BD.resultSet.getString("Cliente.celular"));
                jCEP.setText(BD.resultSet.getString("Cidade.CEP"));
                jBairro.setText(BD.resultSet.getString("Cidade.bairro"));
                jRua.setText(BD.resultSet.getString("Cidade.rua"));
                jEstado.setText(BD.resultSet.getString("Cidade.estado"));
                jNumero.setText(BD.resultSet.getString("Cliente.numero"));
                jIDV.setText(BD.resultSet.getString("venda.IDvenda"));
                String d = BD.resultSet.getString("venda.selltime");
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date data = df.parse(d);
                SimpleDateFormat da = new SimpleDateFormat("dd-MM-yyyy");
                String datafinal = da.format(data).replace("-", "");
                jDataVenda.setText(datafinal);
                jVvenda.setText(BD.resultSet.getString("venda.valorvenda"));

                int IDv = BD.resultSet.getInt("venda.IDvenda");
                sql = "Select * from itemvenda join produto on itemvenda.IDproduto = produto.IDproduto where IDvenda= " + IDv;
                BD.setResultSet(sql);

                while (BD.resultSet.next()) {

                    dtm.addRow(new String[]{String.valueOf(ItemVenda), BD.resultSet.getString("produto.codigo"), BD.resultSet.getString("produto.descr"), BD.resultSet.getString("produto.marca"), BD.resultSet.getString("produto.unidade"), String.valueOf(BD.resultSet.getInt("produto.quantest")), String.valueOf(BD.resultSet.getDouble("produto.valorcusto")), String.valueOf(BD.resultSet.getDouble("produto.valorvenda")), String.valueOf(BD.resultSet.getDouble("itemvenda.desconto")), String.valueOf(BD.resultSet.getDouble("itemvenda.precounitario"))});
                    ItemVenda++;
                }

            }

        } catch (SQLException | ParseException e) {
            JOptionPane.showMessageDialog(null, "Busca Mal Sucedida, Digite o Cogido de venda corretamente!");

        }
    }

    private void LimpaTela() {
        jNome.setText("");
        jCPF.setText("");
        jCNPJ.setText("");
        jEmail.setText("");
        jCEP.setText("");
        jFone.setText("");
        jCelular.setText("");
        jBairro.setText("");
        jRua.setText("");
        jEstado.setText("");
        jCidade.setText("");
        jNumero.setText("");
        jidP.setText("");
        jNomeP.setText("");
        jMarca.setText("");
        jPreco.setText("");
        jQuantidade.setText("");
        jValor.setText("");
        jUnidade.setText("");
        jDesconto.setText("");
        jValorT.setText("");
        jIDV.setText("");
        jDataVenda.setText("");
        jVvenda.setText("");

        int rowCount = dtm.getRowCount();
        //System.out.println("rows" + rowCount);

        if (rowCount != 0) {
            for (int i = rowCount; i >= 0; i--) {
                dtm.removeRow(i - 1);
            }
        }

    }

    public void ManipulaInterfaceDep() {
        switch (modoDep) {

            case "Novo" -> {
                jButton9.setEnabled(true);
                jButton7.setEnabled(true);
                jButton3.setEnabled(false);

            }

            case "Cadastrar" -> {

            }

            case "Editar" -> {

            }

            case "Editando" -> {

            }

            case "Excluir" -> {

            }

            case "pessoaF" -> {
                jCPF.setEnabled(true);
                jCNPJ.setEnabled(false);

            }

            case "pessoaJ" -> {
                jCPF.setEnabled(false);
                jCNPJ.setEnabled(true);

            }

            case "inicial" -> {

                jCPF.setEnabled(true);
                jCNPJ.setEnabled(false);
                jBuscar.setEnabled(true);
                jBCNPJ.setEnabled(true);
                jBCPF.setEnabled(true);

            }

            default ->
                JOptionPane.showMessageDialog(null, "Modo inválido");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTabela1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton jBCNPJ;
    private javax.swing.JRadioButton jBCPF;
    private javax.swing.JTextField jBairro;
    private javax.swing.JButton jBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JFormattedTextField jCEP;
    private javax.swing.JFormattedTextField jCNPJ;
    private javax.swing.JFormattedTextField jCPF;
    private javax.swing.JFormattedTextField jCelular;
    private javax.swing.JTextField jCidade;
    private javax.swing.JFormattedTextField jDataVenda;
    private javax.swing.JTextField jDesconto;
    private javax.swing.JTextField jEmail;
    private javax.swing.JFormattedTextField jEstado;
    private javax.swing.JFormattedTextField jFone;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JTextField jIDV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jMarca;
    private javax.swing.JTextField jNome;
    private javax.swing.JTextField jNomeP;
    private javax.swing.JTextField jNumero;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jPreco;
    private javax.swing.JTextField jQuantidade;
    private javax.swing.JTextField jRua;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabela;
    private javax.swing.JTextField jUnidade;
    private javax.swing.JLabel jVT;
    private javax.swing.JTextField jValor;
    private javax.swing.JTextField jValorT;
    private javax.swing.JTextField jVvenda;
    private javax.swing.JTextField jidP;
    // End of variables declaration//GEN-END:variables

}
