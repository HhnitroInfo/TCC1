/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.sql.*;

import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Felipe Gai
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        System.out.println("Usuario " + UsuarioConectado.getUsuarioC());
        System.out.println("Senha " + UsuarioConectado.getSenhaC());
        System.out.println("Função " + UsuarioConectado.getFuncao());
        jMenuItem2.setVisible(false);
        jMenu1.setVisible(false);
        validausuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Easy Textil");
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu2.setText("Cadastros");

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem1.setText("Cliente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem3.setText("Produtos");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem9.setText("Vendas");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem2.setText("Funcionários");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);
        jMenuBar1.add(jMenu5);

        jMenu1.setText("Banco de Dados");

        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem5.setText("Criar Banco de dados");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem6.setText("Criar Tabelas");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem7.setText("Deletar Tabelas");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem8.setText("Deletar Banco de Dados");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Relatórios");

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem4.setText("Clientes");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem10.setText("Funcionarios");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem11.setText("Produtos");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuItem12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem12.setText("Vendas");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(840, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(463, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new ClienteView().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new ProdutosView().setVisible(true);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql",
                    "root", "&reCH1m");

            Statement st = con.createStatement();
            String sql = "CREATE DATABASE IF NOT EXISTS EasyTextil";
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Banco de dados criado com sucesso");
            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS produto("
                    + " IDproduto int primary key auto_increment,"
                    + " codigo varchar(8),"
                    + " descr varchar(50),"
                    + " quantest int,"
                    + " unidade varchar(25),"
                    + " marca varchar(25),"
                    + " grupo varchar(25),"
                    + " valorcusto double,"
                    + " lucro double,"
                    + " desconto double,"
                    + " valorvenda double)"
                    + "engine = InnoDB";
            System.out.println(sql);
            st.executeUpdate(sql);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS Cidade("
                    + " IDcidade int primary key auto_increment,"
                    + "CEP varchar(8) ,"
                    + "Estado varchar(2) ,"
                    + "Rua varchar(50) ,"
                    + "bairro varchar(50) ,"
                    + "cidade varchar(50)) engine = InnoDB";
            System.out.println(sql);
            st.executeUpdate(sql);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil", "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS cliente("
                    + " IDcliente int primary key auto_increment,"
                    + " nome varchar(50),"
                    + " CPF varchar(16),"
                    + " CNPJ varchar(20),"
                    + " Email varchar(25),"
                    + " telefone varchar(16) ,"
                    + " datanascimento date,"
                    + " sexo varchar(13),"
                    + " celular varchar(16),"
                    + " IDcidade int not null,constraint cidade_IDcidade_FK FOREIGN KEY (IDcidade) REFERENCES cidade(IDcidade)," // para chaves estrangeiras
                    + " numero varchar(16),"
                    + " obs varchar(100)) engine = InnoDB";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Criou a tabela corretamente!");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil", "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS funcionario("
                    + " IDfuncionario int(5) primary key auto_increment,"
                    + " nome varchar(50),"
                    + " CPF varchar(11),"
                    + " Password varchar(50),"
                    + " Email varchar(50),"
                    + " DataNascimento DATE,"
                    + " Sexo varchar(2) ,"
                    + " Salario double,"
                    + " celular varchar(12),"
                    + " DataEntrada date,"
                    + " Departamento varchar(25),"
                    + " Funcao varchar(25),"
                    + " OBS varchar(100)) engine = InnoDB ";
            System.out.println(sql);
            st.executeUpdate(sql);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS Venda("
                    + " IDvenda int primary key auto_increment,"
                    + " valorvenda double ,"
                    + " IDcliente int not null,constraint cliente_IDcliente_FK FOREIGN KEY (IDcliente) REFERENCES cliente(IDcliente)," // para chaves estrangeiras
                    + " IDfuncionario int not null,constraint funcionario_IDfuncionario_FK FOREIGN KEY (IDfuncionario) REFERENCES funcionario(IDfuncionario),"
                    + " selltime TIMESTAMP) engine = InnoDB";

            System.out.println(sql);
            st.executeUpdate(sql);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");

            Statement st = con.createStatement();

            String sql = "CREATE TABLE IF NOT EXISTS ItemVenda("
                    + " IDitemvenda int(5) primary key auto_increment,"
                    + " IDvenda int not null,constraint venda_IDvenda_FK FOREIGN KEY (IDvenda) REFERENCES venda(IDvenda),"
                    + " desconto double,"
                    + " quantidade int ,"
                    + " precounitario double,"
                    + " IDproduto int not null,constraint produto_IDproduto_FK FOREIGN KEY (IDproduto) REFERENCES produto(IDproduto)) engine = InnoDB";
            System.out.println(sql);
            st.executeUpdate(sql);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

       

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP TABLE  produto";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Tabela Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Tabela não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP TABLE  cliente";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Tabela Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Tabela não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP TABLE  Venda";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Tabela Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Tabela não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP TABLE  ItemVenda";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Tabela Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Tabela não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP TABLE  cidade";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Tabela Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Tabela não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = "DROP DATABASE  EasyTextil";
            System.out.println(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Banco de Dados Excluida com sucesso");

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Banco de dados não encontrada");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        new VendaView().setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new FuncionarioView().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = " ";

            String src = "report1.jasper";
            JasperPrint jp = null;
            try {
                jp = JasperFillManager.fillReport(src, null, con);
            } catch (JRException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = " ";

            String src = "report2.jasper";
            JasperPrint jp = null;
            try {
                jp = JasperFillManager.fillReport(src, null, con);
            } catch (JRException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = " ";

            String src = "report3.jasper";
            JasperPrint jp = null;
            try {
                jp = JasperFillManager.fillReport(src, null, con);
            } catch (JRException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
            System.out.println("teste1");
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/EasyTextil",
                    "root", "&reCH1m");
            System.out.println("testeS");
            Statement st = con.createStatement();

            String sql = " ";

            String src = "report4.jasper";
            JasperPrint jp = null;
            try {
                jp = JasperFillManager.fillReport(src, null, con);
            } catch (JRException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);

            con.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas na conexão com a fonte de dados");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver JDBC não encontrado!");
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            new Login().setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);


    }//GEN-LAST:event_jButton1ActionPerformed

    public void validausuario() {

        if (UsuarioConectado.getUsuarioC().equals("root") && UsuarioConectado.getSenhaC().equals("&reCH!m")) {
            jMenuItem2.setVisible(true);
            jMenu1.setVisible(true);
        } else {
            if (UsuarioConectado.getFuncao().equals("GerenteC") || UsuarioConectado.getFuncao().equals("GestorC")) {
                jMenuItem2.setVisible(true);

            } else {
                if (UsuarioConectado.getFuncao().equals("Ti")) {
                     jMenu1.setVisible(true);
                     jMenu2.setVisible(false);

                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Menu().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    // End of variables declaration//GEN-END:variables
}
